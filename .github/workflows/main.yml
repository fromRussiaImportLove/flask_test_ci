# This is a basic workflow to help you get started with Actions

name: Flask-app workflow

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
                python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
          
      - name: Lint with flake8
        run: flake8 .
      
      - name: Test with pytest
        run: pytest tests.py

  build:
    name: Push Docker image to hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
            - name: check out the repo
              uses: actions/checkout@v2
            - name: Set up Docker buildx
              uses: docker/setup-buildx-action@v1
            - name: Login to Docker
              uses: docker/login-action@v1
              with:
                      username: ${{ secrets.DOCKER_USERNAME }}
                      password: ${{ secrets.DOCKER_PSWD }}
            - name: Push to Docker Hub
              uses: docker/build-push-action@v2
              with:
                      push: true
                      tags: pycharmer/flask_ci_test:latest

  deploy:
          runs-on: ubuntu-latest
          needs: build
          steps:
                  - name: executing remote ssh commands to deploy
                    uses: appleboy/ssh-action@master
                    with:
                            host: ${{ secrets.HOST }}
                            username: ${{ secrets.USER }}
                            key: ${{ secrets.SSH_KEY }}
                            script: |
                                    sudo docker pull pycharmer/flask_ci_test
                                    sudo docker stop $(sudo docker ps -a -q)
                                    sudo docker run --rm -d -p 5000:5000 pycharmer/flask_ci_test
